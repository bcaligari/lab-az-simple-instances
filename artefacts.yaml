---
- filename: ./inventory.yaml
  desc: "Ansible inventory for newly minted instances."
  mode: '0644'
  stencil: |2
    ---
    all:
      hosts:
    {%- for host in hosts %}
        {{ host['hostname'] }}:
          ansible_host: {{ host['public_ip'] }}
          ansible_user: {{ user }}
          ansible_connection: ssh
          ansible_ssh_private_key_file: {{ ssh_private_key }}
    {%- endfor -%}

- filename: ./ansible/files/hosts
  desc: "/etc hosts file resolving newly minted instances to their private ip"
  mode: '0644'
  stencil: |2
    127.0.0.1       localhost
    ::1             localhost ipv6-localhost ipv6-loopback
    fe00::0         ipv6-localnet
    ff00::0         ipv6-mcastprefix
    ff02::1         ipv6-allnodes
    ff02::2         ipv6-allrouters
    ff02::3         ipv6-allhosts
    
    {% for host in hosts %}
    {{- "{:16}{}.vegetables.local {}".format(host['private_ip'], host['hostname'], host['hostname']) }}
    {% endfor -%}

- filename: ./scripts/vmssh
  desc: "./scripts/vmssh [nodename]"
  mode: '0755'
  stencil: |2
    #!/bin/bash

    if [ -z "$1" ]
    then
        echo "Usage: $0 vmname"
        echo
    {%- for host in hosts %}
        echo "    {{"{:20}  [ {:15} ]".format(host['hostname'], host['public_ip'])}}"
    {%- endfor %}
        echo
        exit 0
    fi

    VMUSER="{{ user }}"
    VMNAME="$1"
    VMPORT=22
    VMSSH="{{ssh_private_key}}"

    case "$VMNAME" in
    {%- for host in hosts %}
        "{{host['hostname']}}") VMIP={{host['public_ip']}} ;;
    {%- endfor %}
        *) echo No VM goes by that name ; exit 1 ;;
    esac

    ssh-keygen -R [${VMIP}]:${VMPORT} -f ${HOME}/.ssh/known_hosts >/dev/null 2>&1
    exec ssh -i ${VMSSH} -X -q ${VMUSER}@${VMIP} -p ${VMPORT} -o StrictHostKeyChecking="no"
